- name: Run "apt-get update"
  apt:
    update_cache: yes

- name: Install nginx
  apt:
    name: nginx
    state: present

- name: Install supervisor
  apt:
    name: supervisor
    state: present

- name: Install list of packages
  apt: name={{item}} state=installed
  with_items:
       - git
       - supervisor
       - python3-pip
       - postgresql
       - postgresql-contrib

- name: pip Install uwsgi
  pip:
    name: uwsgi

- name: add entry to sysctrl for somaxconn - needed for uwsgi's connections
  sysctl:
    name: net.core.somaxconn
    value: 4096
    sysctl_set: yes
    state: present
    reload: yes

- name: Clone the kin-sdk-python repo
  git:
    repo=https://github.com/kinecosystem/kin-sdk-python.git
    dest=/opt/kin-sdk-python
    accept_hostkey=true
    force=yes
    version=v2-master

- name: pip install reqs for the kin-sdk-python
  pip:
    requirements: /opt/kin-sdk-python/requirements.txt

- name: install the kin-sdk-python from the local copy. force upgrade to take any changes.
  pip: 
    name: /opt/kin-sdk-python
    state: latest

- name: Clone the tippic-server repo
  git:
    repo=https://github.com/kinecosystem/tippic-server.git
    dest=/opt/tippic-server
    accept_hostkey=true
    force=yes
    version={{branch_name}}

- name: Clone the kinit-client-validation-server-module
  git:
    repo=git@github.com:kinecosystem/kinit-client-validation-server-module.git
    dest=/opt/kinit-client-validation-server-module
    accept_hostkey=true
    force=yes
    version=master
    key_file=/home/ubuntu/.ssh/id_rsa

- name: install the kinit-client-validation-server-module  from the local copy. force upgrade to take any changes.
  pip:
    name: /opt/kinit-client-validation-server-module
    state: latest

- name: pip install reqs
  pip:
    requirements: /opt/tippic-server/tippicserver/requirements.txt

- name: Template the config file
  template:
    src: templates/tippicserver/config.py.jinja2
    dest: /opt/tippic-server/tippicserver/config.py
    
- name: install the tippic-server from the local copy. force upgrade to take any changes.
  pip: 
    name: /opt/tippic-server
    state: latest

- name: template the supervisord config file
  template:
    src: "{{ role_path }}/templates/etc/supervisor/conf.d/tippicserver.conf.jinja2"
    dest: /etc/supervisor/conf.d/tippicserver.conf
    mode:

- name: template the supervisord config file
  template:
    src: "{{ role_path }}/templates/etc/supervisor/conf.d/tippicworker-fast.conf.jinja2"
    dest: /etc/supervisor/conf.d/tippicworker-fast.conf
    mode:

- name: template the supervisord config file
  template:
    src: "{{ role_path }}/templates/etc/supervisor/conf.d/tippicworker-slow.conf.jinja2"
    dest: /etc/supervisor/conf.d/tippicworker-slow.conf
    mode:

- name: update supervisor:tippicworker
  supervisorctl:
    name: tippicserver
    state: restarted

- name: update supervisor:tippicworker-fast
  supervisorctl:
    name: tippicworker-fast
    state: restarted

- name: update supervisor:tippicworker-slow
  supervisorctl:
    name: tippicworker-slow
    state: restarted

- name: template the nginx tippicserver config file
  template:
    src: templates/etc/nginx/sites-enabled/tippicserver
    dest: /etc/nginx/sites-enabled/tippicserver

- name: template the nginx default config file (with the /internal endpoint)
  template:
    src: templates/etc/nginx/sites-enabled/default
    dest: /etc/nginx/sites-enabled/default

- name: service nginx restart
  service:
    name: nginx
    state: restarted

# there's a dedicated play for restarting supervisor and nginx
# which removes the servers from the load-balancer and does it one-by-one. once
# this play is done, you need to run the restart one

# all the cron tasks that need to run on all machines:
# (for those that need to run on just one, see the tippic-server-cron role)
#- cron:
#    name: "gather periodic db-stats"
#    job: "/usr/bin/python3 /opt/tippic-server/tippicserver/db_stats.py"
#    # needs to run on all machines
#
#- cron:
#    name: "gather periodic xlm,kin balance"
#    job: "/usr/bin/python3 /opt/tippic-server/tippicserver/track_balance.py"
#    # needs to run on all machines
#
#- cron:
#    name: "periodically track exceptions in the log"
#    job: "/opt/tippic-server/tippicserver/cron/track_exceptions.sh"
#    minute: "*/5" # run every 5 minutes on all machines
